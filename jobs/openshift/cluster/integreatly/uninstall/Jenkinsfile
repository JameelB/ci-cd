#!groovy

def uninstallerOptions = [:]

def verifyUninstallerOptions(uninstallerOptions) {
    if (!uninstallerOptions.clusterName || !uninstallerOptions.openshiftMasterUrl || !uninstallerOptions.clusterAdminUsername || !uninstallerOptions.clusterAdminPassword ||
        !uninstallerOptions.installationGitBranch || !uninstallerOptions.installationGitBranch) {
        def userInput = input message: 'Installer Options', parameters: [
            string(defaultValue: (uninstallerOptions.clusterName ?: ''), description: 'Cluster name', name: 'clusterName'),
            string(defaultValue: (uninstallerOptions.openshiftMasterUrl ?: ''), description: 'OpenShift cluster public URL', name: 'openshiftMasterUrl'),
            string(defaultValue: (uninstallerOptions.clusterAdminUsername ?: 'integreatly'), description: 'OpenShift cluster admin username', name: 'clusterAdminUsername'),
            string(defaultValue: (uninstallerOptions.clusterAdminPassword ?: 'Password1'), description: 'OpenShift cluster admin password', name: 'clusterAdminPassword'),
            string(defaultValue: (uninstallerOptions.installationGitBranch ?: 'https://github.com/integr8ly/installation.git'), description: 'Integreatly uninstaller Git URL', name: 'installationGitBranch'),
            string(defaultValue: (uninstallerOptions.installationGitBranch ?: 'master'), description: 'Integreatly uninstaller Git branch', name: 'installationGitBranch'),
        ]
        uninstallerOptions.clusterName = userInput.clusterName
        uninstallerOptions.openshiftMasterUrl = userInput.openshiftMasterUrl
        uninstallerOptions.clusterAdminUsername = userInput.clusterAdminUsername
        uninstallerOptions.clusterAdminPassword = userInput.clusterAdminPassword
        uninstallerOptions.installationGitBranch = userInput.installationGitBranch
        uninstallerOptions.installationGitBranch = userInput.installationGitBranch
        verifyUninstallerOptions(uninstallerOptions)
    }
}

stage("Verify Uninstallation Options") {
    uninstallerOptions.clusterName = params.clusterName
    uninstallerOptions.openshiftMasterUrl = params.openshiftMasterUrl
    uninstallerOptions.clusterAdminUsername = params.clusterAdminUsername
    uninstallerOptions.clusterAdminPassword = params.clusterAdminPassword
    uninstallerOptions.installationGitBranch = params.installationGitBranch
    uninstallerOptions.installationGitBranch = params.installationGitBranch

    verifyUninstallerOptions(uninstallerOptions)
    println "Installer Options: ${uninstallerOptions}"
    currentBuild.displayName = "${currentBuild.displayName} ${uninstallerOptions.clusterName}"
    currentBuild.description = """clusterName: ${uninstallerOptions.clusterName}\nopenshiftMasterUrl: ${uninstallerOptions.openshiftMasterUrl}
                                \nopenshiftUsername: ${uninstallerOptions.clusterAdminUsername}\nopenshiftPassword: ${uninstallerOptions.clusterAdminPassword}
                                \ninstallationGitBranch: ${uninstallerOptions.installationGitUrl}\ninstallationGitBranch: ${uninstallerOptions.installationGitBranch}"""
}

node('cirhos_rhel7') {
    cleanWs()
    stage('Uninstall Integreatly') {
        if (params.dryRun) {
            println("Would call ansibleTower Integreatly Uninstall job template with the following unnstallation options: ${uninstallerOptions}")
        } else {
            wrap([$class: 'AnsiColorBuildWrapper', colorMapName: "xterm"]) {
              ansibleTower(
                towerServer: 'Dev Tower',
                jobTemplate: 'Integreatly Uninstall Template',
                templateType: 'job',
                importTowerLogs: true,
                removeColor: false,
                verbose: true,
                extraVars: """---
                  cluster_name: ${uninstallerOptions.clusterName}
                  openshift_master_public_url: ${uninstallerOptions.openshiftMasterUrl}
                  openshift_username: ${uninstallerOptions.clusterAdminUsername}
                  openshift_password: ${uninstallerOptions.clusterAdminPassword}
                  integreatly_project_uninstall_scm_url: ${uninstallerOptions.installationGitBranch}
                  integreatly_project_uninstall_scm_branch: ${uninstallerOptions.installationGitBranch}"""
              )
            }
        }
    }
}
