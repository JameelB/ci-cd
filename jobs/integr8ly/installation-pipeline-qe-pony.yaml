---

- job:
    name: installation-pipeline-qe-pony
    project-type: pipeline
    description: "Installs Integreatly remotely from Jenkins slave to QE Pony cluster."
    sandbox: false
    concurrent: true
    parameters:
        - string:
            name: REPOSITORY
            default: https://github.com/integr8ly/installation.git
            description: "Repository of the Integreatly installer"
        - string:
            name: BRANCH
            default: 'master'
            description: "Branch of the installer repository"
        - string:
            name: CLUSTER_URL
            description: "URL of cluster for installation."
        - string:
            name: GH_CLIENT_ID
            default: b15294d65592a5e6afb4
            description: "GitHub Client ID for OAuth Apps, required for some of the walkthroughs. Can be left empty"
        - string:
            name: GH_CLIENT_SECRET
            default: 539a4a94cda8854d610d2dbef25881a31b49cba2
            description: "GitHub Client Secret for OAuth Apps, required for some of the walkthroughs. Can be left empty"
        - bool:
            name: SELF_SIGNED_CERTS
            default: false
            description: "Indicates whether cluster uses self signed certificates or not"
        - string:
            name: ANSIBLE_USER
            default: root
            description: "User for Ansible to access the master node of target cluster"
        - string:
            name: MASTER_URLS
            description: "Comma separated list of URLs for master nodes of target cluster to be used in Ansible inventory file"
        - string:
            name: OC_USER
            description: "OpenShift user for QE cluster."
        - string:
            name: OC_PASSWORD
            description: "OpenShift password for QE cluster."
        - string:
            name: ADDITIONAL_ANSIBLE_PARAMS
            description: "Additional parameters passed to install playbook, e.g.'-e eval_seed_users_count=0'. Can be left empty"
    dsl: |
        String[] intlyCompTags = ["rhsso_operator_release_tag", 
                                  "msbroker_release_tag", 
                                  "gitea_operator_release_tag",
                                  "webapp_version",
                                  "webapp_operator_release_tag",
                                  "middleware_monitoring_operator_release_tag",
                                  "backup_version"]

        timeout(60) { ansiColor('gnome-terminal') { timestamps {
            node('cirhos_rhel7') {        
                stage('Verify input') {
                    if (!MASTER_URLS) {
                        throw new hudson.AbortException('MASTER_URLS parameter is required!')
                    }
                    if (!CLUSTER_URL) {
                        throw new hudson.AbortException('CLUSTER_URL parameter is required!')
                    }
                    if (!OC_USER) {
                        throw new hudson.AbortException('OC_USER parameter is required!')
                    }
                    if (!OC_PASSWORD) {
                        throw new hudson.AbortException('OC_PASSWORD parameter is required!')
                    }
                }

                stage('Clone the installer') {
                    dir('installation') {
                        checkout([
                            $class: 'GitSCM',
                            branches: [[name: BRANCH]],,
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            userRemoteConfigs: [[url: REPOSITORY]]
                        ])
                        if(!fileExists("evals")) {
                            sh "ln -s . evals"
                        }
                    } // dir
                } // stage

                stage('Prepare environment') {
                    dir('installation') {
                        sh """
                            cp ./evals/inventories/hosts.template ./evals/inventories/hosts
                            sed -i 's/ansible_user=ec2-user/ansible_user=${ANSIBLE_USER}/g' ./evals/inventories/hosts
                        """
                    
                        String masterUrls = MASTER_URLS.replaceAll(~/,[\s]*/, '\\\\n')
                    
                        sh """
                            sed -i '\$!N;s@\\[master\\]\\n127.0.0.1@[master]\\n${masterUrls}@;P;D' ./evals/inventories/hosts
                        """
                    
                        String output = readFile('./evals/inventories/hosts')
                        println output

                        if (BRANCH == 'master') {   
                            // patch all the integreatly components to use master tag version
                            for(String tag in intlyCompTags){
                                sh """
                                    sed -i "/${tag}: /c\\${tag}: 'master'" inventories/group_vars/all/manifest.yaml
                                """
                            }
                        }
                    } // dir
                } // stage
            
                stage('Execute playbook') {
                    dir('installation/evals') {
                    
                        String ansibleParams = ''
                        if(GH_CLIENT_ID && GH_CLIENT_SECRET) {
                            ansibleParams = "-e github_client_id=${GH_CLIENT_ID} -e github_client_secret=${GH_CLIENT_SECRET}"
                        }
                        ansibleParams = ansibleParams + " -e threescale_pvc_rwx_storageclassname=nfs -e che_persistent_volume_storageclassname=nfs ${ADDITIONAL_ANSIBLE_PARAMS}"

                        sh """
                            sudo ansible-playbook -i ./inventories/hosts ./playbooks/install.yml ${ansibleParams} -e create_cluster_admin=false -e eval_self_signed_certs=${SELF_SIGNED_CERTS} -e openshift_login=true -e openshift_username=${OC_USER} -e openshift_password=${OC_PASSWORD} -e openshift_master_public_url=${CLUSTER_URL}
                        """
                    } // dir
                } // stage

                 stage('Execute "After Installation" Workarounds') {
                    if (BRANCH == 'master') {
                        // this patches WALKTHROUGHS_LOCATIONS to use master tag
                        sh """
                            oc login ${CLUSTER_URL} -u ${OC_USER} -p ${OC_PASSWORD}

                            oc patch webapp/tutorial-web-app-operator -n webapp --type merge -p '{ "spec": { "template": { "parameters": { "WALKTHROUGHS_LOCATION": "https://github.com/integr8ly/tutorial-web-app-walkthroughs#master" } } } }' || true

                            # patch of tutorial-web-app, workaround for https://issues.jboss.org/browse/INTLY-1201
                            oc patch deploymentconfig/tutorial-web-app -n webapp -p '{ "spec": { "template": { "spec": { "containers": [{ "name": "tutorial-web-app", "image": "quay.io/integreatly/tutorial-web-app:master" }]}}}}' || true
                        """
                    }
                } // stage

            } // node
        }}} // timeout, ansiColor, timestamps

