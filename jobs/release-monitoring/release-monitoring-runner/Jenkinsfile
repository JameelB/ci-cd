#!groovy
hasChanges = false

def buildParams(newParams) {
    def jobParams = [
        string(name: 'installationGitUrl', value: params.installationGitUrl),
        string(name: 'installationGitRef', value: params.installationGitRef),
        string(name: 'githubToken', value: params.githubToken),
        string(name: 'credentialId', value: params.credentialId)
    ]

    return jobParams + newParams
}

def runBuild(name, parameters) {
    def instance = build job: name, parameters: parameters, propagate: false
    if (instance.result == 'FAILURE') {
        error('[ERROR] Failed to run release checking job')
    }

    if (instance.result == 'SUCCESS') {
        hasChanges = true
    }   

    return instance
}

stage('3Scale') {
    def stageParams = [
        string(name: 'manifestVar', value: 'threescale_version'),
        string(name: 'projectOrg', value: '3scale'),
        string(name: 'projectRepo', value: '3scale-amp-openshift-templates'),
        string(name: 'productName', value: '3scale'),
        string(name: 'installationProductBranch', value: '3scale-next')
    ]
    def parameters = buildParams(stageParams)
    runBuild(params.monitoringJob, parameters)
}

stage('Validation') {
    if (!hasChanges) {
        println '[INFO] No updates were found.'
        currentBuild.result = 'ABORTED'
        return
    }

    println '[INFO] New product(s) version(s) available.'
}
